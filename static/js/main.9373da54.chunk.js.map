{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","style","color","onClick","toggleMode","defaultChecked","defaultProps","aboutText","TextForm","textDefault","value","words","characters","useState","text","setText","heading","onChange","e","val","target","newText","length","trimEnd","split","backgroundColor","rows","disabled","toUpperCase","toLowerCase","navigator","clipboard","writeText","showAlert","join","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","App","setMode","setAlert","message","setTimeout","document","body","Date","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode"],"mappings":"0NAIe,SAASA,EAAOC,GAC3B,OACI,qBAAKC,UAAS,yCAAoCD,EAAME,KAAI,eAAOF,EAAME,MAAO,SAC5E,sBAAKD,UAAU,kBAAiB,UAC5B,mBAAGA,UAAU,eAAeE,KAAK,IAAG,SAAEH,EAAMI,QAC5C,wBAAQH,UAAU,iBAAiBI,KAAK,SAAS,iBAAe,WAAW,iBAAe,0BAA0B,gBAAc,yBAAyB,gBAAc,QAAQ,aAAW,oBAAmB,SAC3M,sBAAMJ,UAAU,0BAEpB,sBAAKA,UAAU,2BAA2BK,GAAG,yBAAwB,UACjE,oBAAIL,UAAU,kCAAiC,SAC3C,oBAAIA,UAAU,WAAU,SACpB,mBAAGA,UAAU,WAAW,eAAa,OAAOE,KAAK,IAAII,MAAO,CAACC,MAAoB,SAAbR,EAAME,KAAc,QAAQ,WAAW,SAAC,aAMpH,qBAAKD,UAAS,sCAA8C,UAAbD,EAAME,KAAe,OAAO,SAAU,SACjF,uBAAOD,UAAU,mBAAmBQ,QAAST,EAAMU,WAAYL,KAAK,WAAWC,GAAG,yBAAyBK,eAA+B,SAAfX,EAAME,gBAOzJ,CAQAH,EAAOa,aAAe,CAClBR,MAAO,iBACPS,UAAW,QACXX,KAAM,S,WCtCK,SAASY,EAASd,GAAQ,IAAD,IAE9Be,EAAc,CAChBC,MAAO,GACPC,MAAO,EACPC,WAAY,GAGhB,EAAwBC,mBAASJ,GAAY,mBAAtCK,EAAI,KAAEC,EAAO,KA2CpB,OACI,qCACI,sBAAKpB,UAAU,YAAYM,MAAO,CAACC,MAAoB,SAAbR,EAAME,KAAc,QAAQ,WAAW,UAC7E,6BAAKF,EAAMsB,UACX,qBAAKrB,UAAU,OAAM,SACjB,0BAAUA,UAAU,eAAee,MAAOI,EAAKJ,MAAOO,SA9C/C,SAACC,GACpB,IAAIC,EAAMD,EAAEE,OAAOV,MACfW,EAAU,CAACX,MAAOS,EAAKR,MAAOQ,EAAIG,QAAUH,EAAII,QAAQ,IAAIC,MAAM,KAAKF,OAAQV,WAAYO,EAAIG,QACnGP,EAAQM,EACZ,EA0CgGpB,MAAO,CAACwB,gBAA8B,SAAb/B,EAAME,KAAc,UAAU,QAASM,MAAoB,SAAbR,EAAME,KAAc,QAAQ,WAAYI,GAAG,QAAQ0B,KAAK,QAEnN,wBAAQC,SAAwB,IAAdb,EAAKQ,OAAY3B,UAAU,4BAA4BQ,QA1C/D,WAClB,IAAIkB,EAAU,CAACX,MAAOI,EAAKJ,MAAMkB,eACjCb,GAAQ,SAAAD,GAAI,kCACLA,GACAO,EAAO,GAElB,EAoC4G,SAAC,yBACjG,wBAAQM,SAAwB,IAAdb,EAAKQ,OAAY3B,UAAU,4BAA4BQ,QAnC/D,WAClB,IAAIkB,EAAU,CAACX,MAAOI,EAAKJ,MAAMmB,eACjCd,GAAQ,SAAAD,GAAI,kCACLA,GACAO,EAAO,GAElB,EA6B4G,SAAC,yBACjG,wBAAQM,SAAwB,IAAdb,EAAKQ,OAAY3B,UAAU,4BAA4BQ,QA5B5D,WACrBY,EAAQN,EACZ,EA0B+G,SAAC,eACpG,wBAAQkB,SAAwB,IAAdb,EAAKQ,OAAY3B,UAAU,4BAA4BQ,QAzBlE,WACf2B,UAAUC,UAAUC,UAAUlB,EAAKJ,OACnChB,EAAMuC,UAAU,uBAAwB,UAC5C,EAsByG,SAAC,cAC9F,wBAAQN,SAAwB,IAAdb,EAAKQ,OAAY3B,UAAU,4BAA4BQ,QArB3D,WACtB,IAAIgB,EAAML,EAAKJ,MAAMc,MAAM,QAAQU,KAAK,KACpCb,EAAU,CAACX,MAAOS,EAAKP,WAAYO,EAAIG,QAC3CP,GAAQ,SAAAD,GAAI,kCACLA,GACAO,EAAO,GAGlB,EAagH,SAAC,2BAEzG,sBAAK1B,UAAU,iBAAiBM,MAAO,CAACC,MAAoB,SAAbR,EAAME,KAAc,QAAQ,WAAW,UAClF,6BAAI,wBACJ,8BAAG,IAAEkB,EAAKH,MAAM,cAAYG,EAAKF,WAAW,kBAC5C,6BAAI,cACJ,8BAAG,IAAEE,EAAKJ,MAAM,OAChB,+BAAM,OAA8B,QAAvB,EAAQ,OAAJI,QAAI,IAAJA,GAAW,QAAP,EAAJA,EAAMJ,aAAK,WAAP,EAAJ,EAAaY,cAAM,QAAI,GAAI,2BAI5D,CCzEe,SAASa,EAAMzC,GAK1B,OACI,qBAAKO,MAAO,CAACmC,OAAQ,QAAQ,SACxB1C,EAAM2C,OAAS,sBAAK1C,UAAS,sBAAiBD,EAAM2C,MAAMtC,KAAI,gCAAgCuC,KAAK,QAAO,UAC3G,iCAPW,SAACC,GAChB,IAAIC,EAAQD,EAAKV,cACjB,OAAOU,EAAKE,OAAO,GAAGb,cAAgBY,EAAME,MAAM,EACtD,CAIiBC,CAAWjD,EAAM2C,MAAMtC,QAAe,KAAGL,EAAM2C,MAAMO,QAI1E,CC8CeC,MA/Cf,WACE,MAAwBhC,mBAAS,SAAQ,mBAAlCjB,EAAI,KAAEkD,EAAO,KACpB,EAA0BjC,mBAAS,MAAK,mBAAjCwB,EAAK,KAAEU,EAAQ,KAEhBd,EAAY,SAACe,EAASjD,GACxBgD,EAAS,CACPH,IAAKI,EACLjD,KAAMA,IAERkD,YAAW,WACPF,EAAS,KACb,GAAG,KACP,EAeA,OACE,qCAEA,cAACtD,EAAM,CAACK,MAAM,YAAYF,KAAMA,EAAMQ,WAhBrB,WACL,UAATR,GAECkD,EAAQ,QACRI,SAASC,KAAKlD,MAAMwB,gBAAkB,UACtCQ,EAAU,6BAA8B,aAExCa,EAAQ,SACRI,SAASC,KAAKlD,MAAMwB,gBAAkB,QACtCQ,EAAU,8BAA+B,WAE/C,GAKqE,IAAImB,MACvE,cAACjB,EAAK,CAACE,MAAOA,IACd,qBAAK1C,UAAU,iBAAgB,SAMvB,cAACa,EAAQ,CAACyB,UAAWA,EAAWjB,QAAQ,uEAAuEpB,KAAMA,QAOjI,EC9CeyD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,EACV,GAEJ,ECJaQ,IAASC,WAAWb,SAASc,eAAe,SACpDC,OACH,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,OAORb,G","file":"static/js/main.9373da54.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n// import { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n    return (\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link\" aria-current=\"page\" href=\"#\" style={{color: props.mode==='dark'?'white':'#042743'}}>Home</a>\n                        </li>\n                        {/* <li className=\"nav-item\">\n                            <Link className=\"nav-link\" to=\"/about\" style={{color: props.mode==='dark'?'white':'#042743'}}>{props.aboutText}</Link>\n                        </li> */}\n                    </ul>\n                    <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\" defaultChecked={props.mode === 'dark'}/>\n                        {/* <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label> */}\n                    </div>\n                </div>\n            </div>\n        </nav>\n    )\n}\n\nNavbar.propTypes = {\n    title: PropTypes.string.isRequired,\n    aboutText: PropTypes.string.isRequired,\n    mode: PropTypes.string\n}\n\nNavbar.defaultProps = {\n    title: 'Set title here',\n    aboutText: 'About',\n    mode: 'light'\n  };","import React, {useState} from 'react'\n\nexport default function TextForm(props) {\n\n    const textDefault = {\n        value: '',\n        words: 0,\n        characters: 0\n    };\n\n    const [text, setText] = useState(textDefault);\n\n    const handleOnChange = (e) => {\n        let val = e.target.value;\n        let newText = {value: val, words: val.length && val.trimEnd(\"\").split(\" \").length, characters: val.length}\n        setText(newText);\n    }\n\n    const handleUpClick = () => {\n        let newText = {value: text.value.toUpperCase()}\n        setText(text => ({\n            ...text,\n            ...newText\n        }));\n    }\n\n    const handleLoClick = () => {\n        let newText = {value: text.value.toLowerCase()}\n        setText(text => ({\n            ...text,\n            ...newText\n        }));\n    }\n\n    const handleClearClick = () => {\n        setText(textDefault);\n    }\n\n    const handleCopy = () => {\n        navigator.clipboard.writeText(text.value); \n        props.showAlert(\"Copied to Clipboard!\", \"success\");\n    }\n\n    const handleExtraSpaces = () => {\n        let val = text.value.split(/[ ]+/).join(\" \");\n        let newText = {value: val, characters: val.length}\n        setText(text => ({\n            ...text,\n            ...newText\n        }));\n        // props.showAlert(\"Extra spaces removed!\", \"success\");\n    }\n\n    return (\n        <>\n            <div className='container' style={{color: props.mode==='dark'?'white':'#042743'}}>\n                <h1>{props.heading}</h1>\n                <div className=\"mb-3\">                    \n                    <textarea className=\"form-control\" value={text.value} onChange={handleOnChange} style={{backgroundColor: props.mode==='dark'?'#13466e':'white', color: props.mode==='dark'?'white':'#042743'}} id=\"myBox\" rows=\"8\"></textarea>\n                </div>\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleUpClick}>Convert to Uppercase</button>\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleLoClick}>Convert to Lowercase</button>\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleClearClick}>Clear Text</button>\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleCopy}>Copy Text</button>\n                <button disabled={text.length===0} className=\"btn btn-primary mx-1 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\n            </div>\n            <div className=\"container my-3\" style={{color: props.mode==='dark'?'white':'#042743'}}>\n                <h2> Your Text Summary </h2>\n                <p> {text.words} words and {text.characters} characters </p>\n                <h2> Preview </h2>\n                <p> {text.value} </p>\n                <h3>{ 0.00099 * (text?.value?.length ?? 0) } Minutes to read</h3>\n            </div>\n        </>\n    )\n}\n","import React from 'react'\n\nexport default function Alert(props) {\n    const capitalize = (word) => {\n        let lower = word.toLowerCase();\n        return word.charAt(0).toUpperCase() + lower.slice(1);\n    }\n    return (\n        <div style={{height: '50px'}}>\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{capitalize(props.alert.type)}</strong>: {props.alert.msg} \n            </div>}\n        </div>\n    )\n}\n","import './App.css';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\n// import About from './components/About';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n \nfunction App() {\n  const [mode, setMode] = useState('light'); // Whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type)=>{\n      setAlert({\n        msg: message,\n        type: type\n      })\n      setTimeout(() => {\n          setAlert(null);\n      }, 1500);\n  }\n\n  const toggleMode = () => {\n    if(mode === 'light'){\n        // e.checked;\n        setMode('dark');\n        document.body.style.backgroundColor = '#042743';\n        showAlert(\"Dark mode has been enabled\", \"success\");\n    } else {\n        setMode('light');\n        document.body.style.backgroundColor = 'white';\n        showAlert(\"Light mode has been enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TextUtils\" mode={mode} toggleMode={toggleMode} key={new Date()} />\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About mode={mode} />\n          </Route>\n          <Route exact path=\"/\"> */}\n            <TextForm showAlert={showAlert} heading=\"Try TextUtils - word counter, character counter, remove extra spaces\" mode={mode}/>\n          {/* </Route>\n    </Switch> */}\n    </div>\n    {/* </Router> */}\n    </> \n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}